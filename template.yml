AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template to deploy a Lambda function and optional API Gateway

Parameters:
  LambdaFunctionName:
    Type: String
    Default: weatherLambda
    Description: Name of the Lambda function

Resources:

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${LambdaFunctionName}-execution-role"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AmazonAPIGatewayInvokeFullAccess

  WeatherLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Ref LambdaFunctionName
      Handler: lambda_function.lambda_handler
      Runtime: python3.9
      Timeout: 10
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref LambdaArtifactBucket
        S3Key: lambda.zip

  LambdaApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Sub "${LambdaFunctionName}-api"
      Description: "API Gateway for the weather Lambda function"

  LambdaResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref LambdaApi
      ParentId: !GetAtt LambdaApi.RootResourceId
      PathPart: weather

  LambdaMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref LambdaApi
      ResourceId: !Ref LambdaResource
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub
          - arn:aws:apigateway:${Region}:lambda:path/2015-03-31/functions/${LambdaArn}/invocations
          - Region: !Ref "AWS::Region"
            LambdaArn: !GetAtt WeatherLambdaFunction.Arn

  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref WeatherLambdaFunction
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${LambdaApi}/*/GET/weather"

  Deployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn: LambdaMethod
    Properties:
      RestApiId: !Ref LambdaApi
      StageName: prod

Outputs:

  LambdaFunctionName:
    Description: "Lambda Function Name"
    Value: !Ref WeatherLambdaFunction

  ApiInvokeURL:
    Description: "Invoke URL for API Gateway"
    Value: !Sub "https://${LambdaApi}.execute-api.${AWS::Region}.amazonaws.com/prod/weather"
